########## SETUP ##############
To setup for running the benchmarks you must first create simlinks to the following node executables in the nodes directory

nodes/node_watchdog/node - the executable that contains the modifications to node to implement the watchdog functionality.
	The version with the watchdog changes can be created by cloning and checking out HEAD.
		`$(git clone .. nodes/watchdog_node && cd nodes/watchdog_node  && ./configure && make -j $(nproc) && cd -)`


nodes/original_node/node - the executable at the node commit dc6bbb44da before any node-cure commits were made.
	The version with no watchdog changes can be created by cloning and checkign out commit dc6bbb44da.
		`$(git clone .. nodes/original_node && cd nodes/original_node && git checkout "dc6bbb4" && ./configure && make -j $(nproc) && cd -)`

Once the executables have been created/linked the benchmarks are ready to be run.



####### Running Benchmarks ######

#NOTE when running benchmarks the environment variable NODECURE_SILENT should be set to remove unnessesary overhead due to logging.


The benchmarks can be run with the script `run_benchmarks.sh`.
Once the benchmarks have completed running, the results will be stored in the result/<test_name>.result and the results_single_cpu/<test_name>.result.



This script will generate a new random file for use in the randomRead.js test then run every tests against both the watchdog_node and the original_node.

#TODO make the benchamrks run on every node executable in nodes/*/node so that way any additional changes can be tested without changing th ebenchmark scripts.



